<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Hostelia | Entry/Exit Register</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
      .gradient {
        background: linear-gradient(90deg, #004aad 0%, #cb6ce6 100%);
      }
      body {
        font-family: "Poppins", sans-serif;
      }

      .hero-section {
        background: linear-gradient(90deg, #004aad 0%, #cb6ce6 100%);
        min-height: 300px;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        color: white;
        padding: 0 1rem;
      }

      .hero-section::before {
        content: "";
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" fill="rgba(255,255,255,0.05)"/></svg>');
        opacity: 0.1;
      }

      .table-container {
        background: white;
        border-radius: 1rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
          0 2px 4px -1px rgba(0, 0, 0, 0.06);
      }

      .table-header {
        background: linear-gradient(90deg, #004aad 0%, #cb6ce6 100%);
        color: white;
        border-radius: 1rem 1rem 0 0;
      }

      .table-row {
        transition: all 0.2s ease;
      }

      .table-row:hover {
        background-color: #f8fafc;
        transform: translateY(-1px);
      }

      @media (max-width: 768px) {
        .hero-section {
          min-height: 250px;
        }
      }
    </style>
  </head>

  <body class="leading-normal tracking-normal">
    <%- include('partials/navbar.ejs', { loggedIn }) %>

    <!-- Hero Section -->
    <div class="hero-section relative">
      <div class="max-w-6xl mx-auto relative z-10 px-4 mt-32">
        <h1 class="text-4xl md:text-5xl font-bold mb-4">Hostel Services</h1>
        <p class="text-xl md:text-2xl opacity-90 mb-8">
          Access all hostel-related services in one place
        </p>

        <!-- Service Navigation Buttons -->
        <div class="flex flex-wrap justify-center gap-4 mb-8">
          <a
            href="/services/problems"
            class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-500 text-white rounded-lg shadow-md hover:shadow-lg transition-all duration-200 transform hover:scale-105"
          >
            <svg
              class="w-5 h-5 mr-2"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"
              />
            </svg>
            Problem Tracker
          </a>
          <a
            href="/services/register"
            class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-lg shadow-md hover:shadow-lg transition-all duration-200 transform hover:scale-105"
          >
            <svg
              class="w-5 h-5 mr-2"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"
              />
            </svg>
            Entry/Exit
          </a>
          <a
            href="/services/chatRoom"
            class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-lg shadow-md hover:shadow-lg transition-all duration-200 transform hover:scale-105"
          >
            <svg
              class="w-5 h-5 mr-2"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"
              />
            </svg>
            Chat Room
          </a>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <!-- Page Title and Action Button -->
      <div class="flex justify-between items-center mb-8">
        <h2 class="text-3xl font-bold text-gray-900">Entry/Exit Register</h2>
        <div class="flex items-center gap-3">
          <div class="relative">
            <input
              type="text"
              id="dateFilter"
              placeholder="YYYY-MM-DD"
              pattern="\d{4}-\d{2}-\d{2}"
              title="Please enter date in YYYY-MM-DD format"
              class="p-3 pr-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
            />
            <button
              id="clearDateFilter"
              type="button"
              class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 z-10 bg-white rounded-full p-0.5"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                  clip-rule="evenodd"
                />
              </svg>
            </button>
          </div>
          <button
            onclick="openModal()"
            class="bg-gradient-to-r from-blue-600 to-purple-500 text-white px-6 py-3 rounded-lg shadow-md hover:shadow-lg transition-all duration-200 transform hover:scale-105 flex items-center gap-2"
          >
            <svg
              class="w-5 h-5"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 4v16m8-8H4"
              />
            </svg>
            Create New Entry
          </button>
        </div>
      </div>

      <!-- No entries message - hidden by default -->
      <div
        id="noEntriesMessage"
        class="hidden bg-blue-50 p-6 rounded-lg text-center mb-8"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-12 w-12 mx-auto text-blue-400 mb-4"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
          />
        </svg>
        <h3 class="text-lg font-medium text-blue-800 mb-2">No Entries Found</h3>
        <p class="text-blue-600">
          There are no entry/exit records for the selected date.
        </p>
      </div>

      <!-- Table Container -->
      <div
        class="table-container overflow-hidden max-h-[500px] overflow-y-auto"
      >
        <div class="overflow-x-auto">
          <table class="w-full text-sm text-left">
            <thead class="table-header">
              <tr>
                <th scope="col" class="px-6 py-4 font-medium">Student Name</th>
                <th scope="col" class="px-6 py-4 font-medium">Roll Number</th>
                <th scope="col" class="px-6 py-4 font-medium">Hostel</th>
                <th scope="col" class="px-6 py-4 font-medium">Room Number</th>
                <th scope="col" class="px-6 py-4 font-medium">Purpose</th>
                <th scope="col" class="px-6 py-4 font-medium">Entry/Exit</th>
                <th scope="col" class="px-6 py-4 font-medium">Date</th>
                <th scope="col" class="px-6 py-4 font-medium">Time</th>
              </tr>
            </thead>
            <tbody>
              <% entryExit.forEach(student => { %>
              <tr class="table-row border-b border-gray-200">
                <td class="px-6 py-4 font-medium text-gray-900">
                  <%= student.studentName %>
                </td>
                <td class="px-6 py-4 text-gray-600">
                  <%= student.studentRollNumber %>
                </td>
                <td class="px-6 py-4 text-gray-600">
                  <%= student.studentHostel %>
                </td>
                <td class="px-6 py-4 text-gray-600">
                  <%= student.studentRoomNumber %>
                </td>
                <td class="px-6 py-4 text-gray-600"><%= student.purpose %></td>
                <td class="px-6 py-4">
                  <span
                    class="px-3 py-1 rounded-full text-sm font-medium <%= student.transitStatus === 'ENTRY' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>"
                  >
                    <%= student.transitStatus %>
                  </span>
                </td>
                <td class="px-6 py-4 text-gray-600"><%= student.date %></td>
                <td class="px-6 py-4 text-gray-600"><%= student.time %></td>
              </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Transit Modal -->
    <div
      id="transitModal"
      class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-[9999]"
    >
      <div class="bg-white rounded-xl shadow-2xl w-full max-w-2xl mx-4">
        <div
          class="flex items-center justify-between p-6 border-b border-gray-200"
        >
          <h2 class="text-2xl font-bold text-gray-900">Create Transit Entry</h2>
          <button
            onclick="closeModal()"
            class="text-gray-400 hover:text-gray-600 transition-colors duration-200"
          >
            <svg
              class="w-6 h-6"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M6 18L18 6M6 6l12 12"
              />
            </svg>
          </button>
        </div>

        <form
          action="/services/transit"
          method="POST"
          class="p-6"
          id="transitForm"
        >
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2"
                >Student Name</label
              >
              <input
                type="text"
                name="studentName"
                id="studentName"
                class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                disabled
                required
              />
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2"
                >Roll Number</label
              >
              <input
                type="number"
                name="studentRollNumber"
                id="studentRollNumber"
                class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                required
              />
              <p class="text-xs text-blue-600 mt-1" id="rollPrompt">
                Enter roll number to autofill details
              </p>
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2"
                >Hostel</label
              >
              <input
                type="text"
                name="studentHostel"
                id="studentHostel"
                class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                disabled
                required
              />
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2"
                >Room Number</label
              >
              <input
                type="number"
                name="studentRoomNumber"
                id="studentRoomNumber"
                class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                disabled
                required
              />
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2"
                >Purpose</label
              >
              <input
                type="text"
                name="purpose"
                class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                required
              />
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2"
                >Entry/Exit</label
              >
              <select
                name="transitStatus"
                class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                required
              >
                <option value="ENTRY">Entry</option>
                <option value="EXIT">Exit</option>
              </select>
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2"
                >Date</label
              >
              <input
                type="date"
                name="date"
                class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                required
              />
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2"
                >Time</label
              >
              <input
                type="time"
                name="time"
                class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                required
              />
            </div>
          </div>

          <div class="flex justify-end gap-4 mt-6">
            <button
              type="button"
              onclick="closeModal()"
              class="px-6 py-3 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition duration-200"
            >
              Cancel
            </button>
            <button
              type="submit"
              class="px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-500 text-white rounded-lg hover:from-blue-700 hover:to-purple-600 transition-all duration-200 shadow-md hover:shadow-lg"
            >
              Submit
            </button>
          </div>
        </form>
      </div>
    </div>

    <%- include('partials/footer.ejs') %>
    <script src="/js/navbar.js"></script>
    <script>
      function openModal() {
        const modal = document.getElementById("transitModal");
        modal.classList.remove("hidden");
        modal.classList.add("flex");
      }

      function closeModal() {
        const modal = document.getElementById("transitModal");
        modal.classList.add("hidden");
        modal.classList.remove("flex");
      }

      // Close modal when clicking outside of it
      window.onclick = function (event) {
        const modal = document.getElementById("transitModal");
        if (event.target === modal) {
          closeModal();
        }
      };

      // Autofetch student details by roll number
      document
        .getElementById("studentRollNumber")
        .addEventListener("blur", async function () {
          const roll = this.value.trim();
          const nameInput = document.getElementById("studentName");
          const hostelInput = document.getElementById("studentHostel");
          const roomInput = document.getElementById("studentRoomNumber");
          const prompt = document.getElementById("rollPrompt");

          // Reset fields
          nameInput.value = "";
          hostelInput.value = "";
          roomInput.value = "";
          nameInput.disabled = true;
          hostelInput.disabled = true;
          roomInput.disabled = true;

          prompt.textContent = "Fetching details...";

          if (!roll) {
            prompt.textContent = "Enter roll number to autofill details";
            return;
          }

          try {
            const res = await fetch(`/services/users/by-roll/${roll}`);

            if (!res.ok) {
              prompt.textContent = "No student found for this roll number.";
              return;
            }

            const data = await res.json();

            if (data && data.name && data.hostel && data.roomNo) {
              nameInput.value = data.name;
              hostelInput.value = data.hostel;
              roomInput.value = data.roomNo;
              prompt.textContent = "";
            } else {
              prompt.textContent = "No student found for this roll number.";
            }
          } catch (e) {
            console.error("Error fetching student details:", e);
            prompt.textContent = "No student found for this roll number.";
          }
        });

      // Prevent form submission if details not fetched
      document
        .getElementById("transitForm")
        .addEventListener("submit", function (e) {
          const nameInput = document.getElementById("studentName");
          const hostelInput = document.getElementById("studentHostel");
          const roomInput = document.getElementById("studentRoomNumber");
          if (!nameInput.value || !hostelInput.value || !roomInput.value) {
            e.preventDefault();
            document.getElementById("rollPrompt").textContent =
              "Please enter a valid roll number and wait for details to autofill.";
          }
        });
    </script>

    <!-- Date Filter Script -->
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const dateFilter = document.getElementById("dateFilter");
        const clearDateFilter = document.getElementById("clearDateFilter");
        const tableRows = document.querySelectorAll(".table-row");
        const noEntriesMessage = document.getElementById("noEntriesMessage");
        const tableContainer = document.querySelector(".table-container");

        // Validate date format (YYYY-MM-DD)
        function isValidDateFormat(dateString) {
          return /^\d{4}-\d{2}-\d{2}$/.test(dateString);
        }

        // Function to filter entries by date
        function filterByDate(date) {
          // If date is not in correct format, don't filter
          if (date && !isValidDateFormat(date)) {
            alert("Please enter date in YYYY-MM-DD format");
            dateFilter.value = "";
            return 0;
          }

          console.log("Filtering by date:", date);

          let visibleCount = 0;

          tableRows.forEach((row) => {
            const dateCell = row.querySelector("td:nth-child(7)");
            if (!dateCell) return;

            const rowDate = dateCell.textContent.trim();

            if (!date || rowDate === date) {
              row.style.display = "";
              visibleCount++;
            } else {
              row.style.display = "none";
            }
          });

          // Show/hide no entries message
          if (visibleCount === 0 && date) {
            noEntriesMessage.classList.remove("hidden");
            tableContainer.classList.add("hidden");
          } else {
            noEntriesMessage.classList.add("hidden");
            tableContainer.classList.remove("hidden");
          }

          return visibleCount;
        }

        // Apply formatting while typing
        dateFilter.addEventListener("input", function (e) {
          let value = this.value;

          // Remove any non-digits or non-hyphens
          value = value.replace(/[^\d-]/g, "");

          // Auto-insert hyphens
          if (value.length > 0) {
            // First, remove any existing hyphens
            value = value.replace(/-/g, "");

            // Then insert hyphens in the correct positions
            if (value.length > 4) {
              value = value.substring(0, 4) + "-" + value.substring(4);
            }
            if (value.length > 7) {
              value = value.substring(0, 7) + "-" + value.substring(7);
            }

            // Limit to YYYY-MM-DD format (10 characters)
            value = value.substring(0, 10);
          }

          this.value = value;
        });

        // Handle filter when pressing Enter
        dateFilter.addEventListener("keydown", function (e) {
          if (e.key === "Enter") {
            e.preventDefault();
            const selectedDate = this.value;
            filterByDate(selectedDate);
          }
        });

        // Also handle blur event for filtering
        dateFilter.addEventListener("blur", function () {
          const selectedDate = this.value;
          if (selectedDate) {
            filterByDate(selectedDate);
          }
        });

        // Clear filter button
        clearDateFilter.addEventListener("click", function (e) {
          e.preventDefault();
          e.stopPropagation();
          dateFilter.value = "";
          filterByDate("");
        });
      });
    </script>
  </body>
</html>
