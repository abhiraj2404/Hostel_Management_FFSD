<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Student Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>

    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <style>
      .gradient {
        background: linear-gradient(90deg, #004aad 0%, #cb6ce6 100%);
      }
      .meal-item {
        padding: 0.5rem;
        border-bottom: 1px solid #e5e7eb; /* Light gray border between items */
      }
      .meal-item:last-child {
        border-bottom: none; /* Remove border for the last item */
      }
      /* Hide scrollbar for Chrome, Safari and Opera */
      .scrollbar-hide::-webkit-scrollbar {
        display: none;
      }
      .scrollbar-hide {
        -ms-overflow-style: none;
        scrollbar-width: none;
      }

      /* Set up a container that shows 6 problems at once (2 rows x 3 columns) */
      .overflow-x-auto {
        overflow-x: auto;
        max-width: calc(350px * 3 + 1.5rem * 2);
        margin: 0 auto;
      }

      /* For two rows */
      .grid-cols-3 > div:nth-child(n + 7) {
        margin-top: 1.5rem;
      }

      .problem-container {
        width: calc(
          350px * 3 + 2rem * 5
        ); /* 3 cards per row + padding + increased gap */
        max-width: 100%;
        margin: 0 auto;
        overflow-y: auto;
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        background-color: #f9fafb;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
          0 2px 4px -1px rgba(0, 0, 0, 0.06);
      }

      /* Custom scrollbar styling */
      .problem-container::-webkit-scrollbar {
        width: 8px;
      }

      .problem-container::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 4px;
      }

      .problem-container::-webkit-scrollbar-thumb {
        background: #d1d5db;
        border-radius: 4px;
      }

      .problem-container::-webkit-scrollbar-thumb:hover {
        background: #9ca3af;
      }

      /* Ensure all cards are at the same height */
      .grid-cols-3 {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 2rem;
        padding: 1rem;
      }

      /* Base card styles - no transform in initial state */
      .problem-card {
        height: 100%;
        display: flex;
        flex-direction: column;
        transform: none !important;
        transition: all 0.3s ease;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
          0 2px 4px -1px rgba(0, 0, 0, 0.06);
        margin: 0 !important;
      }

      /* Apply transform ONLY on hover */
      .problem-card:hover {
        transform: translateY(-0.25rem) !important;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
          0 4px 6px -2px rgba(0, 0, 0, 0.05);
      }

      /* Essential structure for consistent card heights */
      .problem-card .relative {
        flex-shrink: 0;
      }

      .problem-card > div:last-child {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
      }

      /* Consistent title heights */
      .problem-card h3 {
        height: 3.5rem;
        margin-bottom: 0.75rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }
    </style>
  </head>
  <body class="">
    <%- include('../navbar.ejs',{loggedIn}) %>

    <h1 class="text-5xl font-bold text-gray-900 pt-40 text-center">
      Dashboard
      <div class="w-full mb-10">
        <div
          class="h-1 mx-auto bg-gradient-to-r from-pink-500 to-purple-600 w-64 opacity-50 my-4 rounded"
        ></div>
      </div>
    </h1>

    <div
      class="flex justify-center items-center w-full bg-gray-100 p-4 sm:p-8 md:p-20"
    >
      <div class="bg-white p-4 sm:p-8 rounded-2xl shadow-xl w-full">
        <div class="flex flex-col md:flex-row items-center gap-4 md:gap-8">
          <!-- Profile Image -->
          <div class="md:w-1/3 flex justify-center">
            <div class="relative">
              <img
                src="/images/OIP.jpg"
                alt="Profile Photo"
                class="w-32 h-32 sm:w-48 sm:h-48 rounded-full object-cover border-4 border-blue-500 shadow-lg"
              />
              <div
                class="absolute -bottom-2 left-1/2 transform -translate-x-1/2"
              >
                <span
                  class="bg-blue-500 text-white px-3 py-1 rounded-full text-sm font-medium"
                  >Student</span
                >
              </div>
            </div>
          </div>

          <!-- Student Details -->
          <div class="md:w-2/3 space-y-4 text-center md:text-left">
            <div>
              <h2 class="text-2xl sm:text-3xl font-bold text-gray-800">
                <%=userInfo.name %>
              </h2>
              <p class="text-blue-600 font-medium"><%=userInfo.rollNo %></p>
            </div>

            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
              <div class="bg-gray-50 p-3 rounded-lg">
                <p class="text-gray-500 text-sm">Email</p>
                <p class="text-gray-800 font-medium"><%=userInfo.email %></p>
              </div>

              <div class="bg-gray-50 p-3 rounded-lg">
                <p class="text-gray-500 text-sm">Year</p>
                <p class="text-gray-800 font-medium"><%=userInfo.year %></p>
              </div>

              <div class="bg-gray-50 p-3 rounded-lg">
                <p class="text-gray-500 text-sm">Hostel</p>
                <p class="text-gray-800 font-medium"><%=userInfo.hostel %></p>
              </div>

              <div class="bg-gray-50 p-3 rounded-lg">
                <p class="text-gray-500 text-sm">Room Number</p>
                <p class="text-gray-800 font-medium"><%=userInfo.roomNo %></p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="container mx-auto px-4 sm:px-8 md:px-20 py-4 sm:py-8 mb-8">
      <div
        class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-8"
      >
        <h1 class="text-2xl sm:text-3xl font-bold text-gray-900">
          Your Problem Tracker
        </h1>

        <!-- Modal toggle -->
        <% if (userInfo.role === 'student') { %>
        <button
          data-modal-target="crud-modal"
          data-modal-toggle="crud-modal"
          class="w-full sm:w-auto inline-flex items-center justify-center px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-600 hover:bg-blue-700 text-white font-semibold rounded-lg shadow-md transition duration-200 transform hover:scale-105"
          type="button"
        >
          <svg
            class="w-5 h-5 mr-2"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 4v16m8-8H4"
            />
          </svg>
          Register New Problem
        </button>
        <% } %>

        <!-- Main modal -->
        <div
          id="crud-modal"
          tabindex="-1"
          aria-hidden="true"
          class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full bg-black bg-opacity-50"
        >
          <div class="relative p-4 w-full max-w-xl max-h-full">
            <!-- Modal content -->
            <div
              class="relative bg-white rounded-xl shadow-2xl dark:bg-gray-700"
            >
              <!-- Modal header -->
              <div
                class="flex items-center justify-between p-6 border-b rounded-t dark:border-gray-600 border-gray-200"
              >
                <h3 class="text-xl font-bold text-gray-900 dark:text-white">
                  Register New Problem
                </h3>
                <button
                  type="button"
                  class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center transition-colors duration-200"
                  data-modal-toggle="crud-modal"
                >
                  <svg
                    class="w-4 h-4"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 14 14"
                  >
                    <path
                      stroke="currentColor"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
                    />
                  </svg>
                  <span class="sr-only">Close modal</span>
                </button>
              </div>
              <!-- Modal body -->

              <form id="problemForm" class="p-6">
                <div class="grid gap-6 mb-6 grid-cols-2">
                  <div class="col-span-2">
                    <label
                      for="problemTitle"
                      class="block mb-2 text-sm font-semibold text-gray-900 dark:text-white"
                      >Problem Title</label
                    >
                    <input
                      type="text"
                      name="problemTitle"
                      id="problemTitle"
                      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-3 transition duration-200"
                      placeholder="Enter problem title"
                      required=""
                    />
                  </div>
                  <div class="col-span-2">
                    <label
                      for="problemDescription"
                      class="block mb-2 text-sm font-semibold text-gray-900 dark:text-white"
                      >Problem Description</label
                    >
                    <textarea
                      id="problemDescription"
                      rows="4"
                      class="block p-3 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                      placeholder="Describe your problem in detail"
                      required=""
                    ></textarea>
                  </div>
                  <div class="col-span-2">
                    <label
                      for="problemImage"
                      class="block mb-2 text-sm font-semibold text-gray-900 dark:text-white"
                      >Upload Image</label
                    >
                    <input
                      type="file"
                      name="problemImage"
                      id="problemImage"
                      accept="image/*"
                      class="block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 focus:outline-none p-3"
                      required
                    />
                  </div>
                  <div class="col-span-2 sm:col-span-1">
                    <label
                      for="roomNo"
                      class="block mb-2 text-sm font-semibold text-gray-900 dark:text-white"
                      >Room Number</label
                    >
                    <input
                      type="text"
                      name="roomNo"
                      id="roomNo"
                      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-3 transition duration-200"
                      placeholder="<%=userInfo.roomNo%>"
                      value="<%=userInfo.roomNo%>"
                      required=""
                    />
                  </div>
                  <div class="col-span-2 sm:col-span-1">
                    <label
                      for="category"
                      class="block mb-2 text-sm font-semibold text-gray-900 dark:text-white"
                      >Category</label
                    >
                    <select
                      id="category"
                      name="category"
                      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-3 transition duration-200"
                      required
                    >
                      <option selected="" disabled>Select category</option>
                      <option value="Electrical">Electrical</option>
                      <option value="Plumbing">Plumbing</option>
                      <option value="Painting">Painting</option>
                      <option value="Carpentry">Carpentry</option>
                      <option value="Cleaning">Cleaning</option>
                      <option value="Internet">Internet</option>
                      <option value="Furniture">Furniture</option>
                      <option value="Pest Control">Pest Control</option>
                      <option value="Other">Other</option>
                    </select>
                  </div>
                  <div class="col-span-2 sm:col-span-1">
                    <label
                      for="roll_number"
                      class="block mb-2 text-sm font-semibold text-gray-900 dark:text-white"
                      >Roll Number</label
                    >
                    <input
                      type="text"
                      name="roll_number"
                      id="roll_number"
                      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-3 transition duration-200"
                      placeholder="<%=userInfo.rollNo%>"
                      value="<%=userInfo.rollNo%>"
                      required=""
                    />
                  </div>
                  <div class="col-span-2 sm:col-span-1">
                    <label
                      for="hostel"
                      class="block mb-2 text-sm font-semibold text-gray-900 dark:text-white"
                      >Hostel</label
                    >
                    <select
                      id="hostel"
                      name="hostel"
                      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-3 transition duration-200"
                      required
                    >
                      <option value="<%=userInfo.hostel%>">
                        <%=userInfo.hostel%>
                      </option>
                    </select>
                  </div>
                </div>
                <button
                  type="submit"
                  class="inline-flex items-center justify-center w-full px-5 py-3 mt-4 text-white bg-gradient-to-r from-blue-500 to-purple-600 hover:bg-blue-700 font-semibold rounded-lg shadow-md transition duration-200 transform hover:scale-105"
                >
                  <svg
                    class="w-5 h-5 mr-2"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"
                      clip-rule="evenodd"
                    ></path>
                  </svg>
                  Submit Problem
                </button>
              </form>
            </div>
          </div>
        </div>
      </div>

      <!-- Search and Filter Section -->
      <div class="bg-white rounded-xl shadow-md p-6 mb-8">
        <div class="flex flex-col md:flex-row gap-4 items-center">
          <div class="flex-1 w-full">
            <input
              type="text"
              id="searchInput"
              placeholder="Search problems..."
              class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
            />
          </div>
          <div class="flex gap-4 w-full md:w-auto">
            <select
              id="categoryFilter"
              class="p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
            >
              <option value="">All Categories</option>
              <option value="Electrical">Electrical</option>
              <option value="Plumbing">Plumbing</option>
              <option value="Painting">Painting</option>
              <option value="Carpentry">Carpentry</option>
              <option value="Cleaning">Cleaning</option>
              <option value="Internet">Internet</option>
              <option value="Furniture">Furniture</option>
              <option value="Pest Control">Pest Control</option>
              <option value="Other">Other</option>
            </select>
            <select
              id="statusFilter"
              class="p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
            >
              <option value="">All Status</option>
              <option value="Pending">Pending</option>
              <option value="ToBeConfirmed">To Be Confirmed</option>
              <option value="Resolved">Resolved</option>
              <option value="Rejected">Rejected</option>
            </select>
          </div>
        </div>
      </div>

      <div id="problem-container" class="relative mb-8">
        <div class="problem-container">
          <div class="grid grid-cols-3 gap-8 p-4 justify-center">
            <% problems.forEach(problem => { %>
            <div
              data-modal-target="problem-modal<%= problem._id %>"
              data-modal-toggle="problem-modal<%= problem._id %>"
              class="problem-card bg-white rounded-xl shadow-lg overflow-hidden cursor-pointer hover:shadow-xl transition-all duration-300 w-[350px]"
              data-id="<%= problem._id %>"
              data-status="<%= problem.status %>"
            >
              <div class="relative h-56 w-full">
                <img
                  src="<%=problem.problemImage%>"
                  alt="<%=problem.problemTitle%>"
                  class="w-full h-full object-cover"
                />
                <div class="absolute top-4 right-4">
                  <% if (problem.status === "Pending") { %>
                  <span
                    class="px-3 py-1.5 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800"
                  >
                    Pending
                  </span>
                  <% } else if (problem.status === "Resolved") { %>
                  <span
                    class="px-3 py-1.5 rounded-full text-sm font-medium bg-green-100 text-green-800"
                  >
                    Resolved
                  </span>
                  <% } else if (problem.status === "ToBeConfirmed") { %>
                  <span
                    class="px-3 py-1.5 rounded-full text-sm font-medium bg-blue-100 text-blue-800"
                  >
                    To Be Confirmed
                  </span>
                  <% } else if (problem.status === "Rejected") { %>
                  <span
                    class="px-3 py-1.5 rounded-full text-sm font-medium bg-red-100 text-red-800"
                  >
                    Rejected
                  </span>
                  <% } %>
                </div>
              </div>
              <div class="p-6 flex-grow flex flex-col justify-between">
                <h3
                  class="text-xl font-bold text-gray-900 mb-3 h-14 overflow-hidden"
                >
                  <%= problem.problemTitle %>
                </h3>
                <div class="flex items-center space-x-3 mt-auto">
                  <span
                    class="bg-blue-100 text-blue-800 px-3 py-1.5 rounded-full text-sm font-medium"
                  >
                    <%= problem.category %>
                  </span>
                  <span class="text-gray-600 text-sm flex items-center">
                    <svg
                      class="w-4 h-4 mr-1"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path
                        d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"
                      />
                    </svg>
                    <%= problem.hostel %>
                  </span>
                </div>
              </div>
            </div>

            <div
              id="problem-modal<%= problem._id %>"
              class="modal fixed inset-0 bg-black bg-opacity-50 items-center justify-center hidden z-50"
            >
              <div
                class="bg-white rounded-xl p-8 w-full max-w-4xl max-h-[90vh] overflow-y-auto m-4"
              >
                <div class="flex justify-between items-center mb-6">
                  <h2
                    id="detailsTitle"
                    class="text-2xl font-bold text-gray-900"
                  >
                    <%= problem.problemTitle %>
                  </h2>

                  <button
                    type="button"
                    class="text-gray-400 hover:text-gray-600 transition-colors duration-200"
                    data-modal-toggle="problem-modal<%= problem._id %>"
                  >
                    <svg
                      class="w-6 h-6"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M6 18L18 6M6 6l12 12"
                      />
                    </svg>
                  </button>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                  <div class="rounded-xl overflow-hidden shadow-lg">
                    <img
                      id="detailsImage"
                      src="<%=problem.problemImage%>"
                      alt="<%=problem.problemTitle%>"
                      class="w-full h-auto object-cover"
                    />
                  </div>

                  <div class="space-y-6">
                    <div class="flex items-center space-x-3">
                      <% if (problem.status === "Pending") { %>
                      <span
                        class="px-3 py-1.5 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800"
                      >
                        Pending
                      </span>
                      <% } else if (problem.status === "Resolved") { %>
                      <span
                        class="px-3 py-1.5 rounded-full text-sm font-medium bg-green-100 text-green-800"
                      >
                        Resolved
                      </span>
                      <% } else if (problem.status === "ToBeConfirmed") { %>
                      <span
                        class="px-3 py-1.5 rounded-full text-sm font-medium bg-blue-100 text-blue-800"
                      >
                        To Be Confirmed
                      </span>
                      <% } else if (problem.status === "Rejected") { %>
                      <span
                        class="px-3 py-1.5 rounded-full text-sm font-medium bg-red-100 text-red-800"
                      >
                        Rejected
                      </span>
                      <% } %>
                      <span
                        class="bg-blue-100 text-blue-800 px-3 py-1.5 rounded-full text-sm font-medium"
                      >
                        <%= problem.category %>
                      </span>
                    </div>

                    <div>
                      <h4 class="text-sm font-semibold text-gray-600 mb-2">
                        Description
                      </h4>
                      <p class="text-gray-800 leading-relaxed">
                        <%= problem.problemDescription %>
                      </p>
                    </div>

                    <div class="border-t border-gray-200 pt-6">
                      <h4 class="text-sm font-semibold text-gray-600 mb-4">
                        Problem Details
                      </h4>
                      <div class="grid grid-cols-2 gap-6">
                        <div>
                          <p class="text-sm text-gray-600">Roll Number</p>
                          <p class="font-medium text-gray-900">
                            <%= problem.studentId %>
                          </p>
                        </div>
                        <div>
                          <p class="text-sm text-gray-600">Hostel</p>
                          <p class="font-medium text-gray-900">
                            <%= problem.hostel %>
                          </p>
                        </div>
                        <div>
                          <p class="text-sm text-gray-600">Room Number</p>
                          <p class="font-medium text-gray-900">
                            <%= problem.roomNumber %>
                          </p>
                        </div>
                      </div>
                    </div>

                    <%# starts here %> <% if(userInfo.role === 'student'){ %>
                    <div class="border-t border-gray-200 pt-6">
                      <h4 class="text-sm font-semibold text-gray-600 mb-4">
                        Student Confirmation
                      </h4>
                      <% if(problem.status === 'Pending'){ %>
                      <div class="text-yellow-600 font-medium">
                        Work In Progress
                      </div>
                      <% } else if(problem.status === 'ToBeConfirmed'){ %>
                      <div class="flex flex-col space-y-3">
                        <div class="text-blue-600 font-medium">
                          Staff has marked this problem as resolved.
                          <span class="font-bold">Is this correct?</span>
                        </div>
                        <div class="flex items-center space-x-4">
                          <form class="studentConfirmation">
                            <input
                              type="hidden"
                              name="problemId"
                              value="<%= problem._id %>"
                            />
                            <input
                              type="hidden"
                              name="isResolved"
                              value="true"
                            />
                            <button
                              type="submit"
                              class="px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600"
                            >
                              Yes, Confirm Resolution
                            </button>
                          </form>
                          <form class="studentConfirmation">
                            <input
                              type="hidden"
                              name="problemId"
                              value="<%= problem._id %>"
                            />
                            <input
                              type="hidden"
                              name="isResolved"
                              value="false"
                            />
                            <button
                              type="submit"
                              class="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600"
                            >
                              No, Not Resolved
                            </button>
                          </form>
                        </div>
                      </div>
                      <% } else if(problem.status === 'Resolved'){ %>
                      <div class="flex items-center space-x-4">
                        <% if(problem.studentStatus==='Resolved') { %>
                        <div class="text-green-600 font-medium">
                          Problem Resolution Confirmed
                        </div>
                        <% } %>
                      </div>
                      <% } else if(problem.status === 'Rejected'){ %>
                      <div class="text-red-600 font-medium">
                        Problem Rejected
                      </div>
                      <% } %>
                    </div>
                    <% } %> <%# ends here %> <% if (userInfo.role !== 'student')
                    { %>
                    <div class="border-t border-gray-200 pt-6">
                      <h4 class="text-sm font-semibold text-gray-600 mb-4">
                        Update Status
                      </h4>
                      <form id="statusForm" class="flex items-center space-x-4">
                        <input
                          type="hidden"
                          name="problemId"
                          value="<%= problem._id %>"
                        />
                        <select
                          name="status"
                          class="flex-1 bg-gray-50 border border-gray-300 text-gray-900 rounded-lg p-3 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                        >
                          <option disabled selected>Select Status</option>
                          <option value="Pending">Pending</option>
                          <option value="Resolved">Resolved</option>
                          <% if (userInfo.role === 'admin') { %>
                          <option value="Rejected">Rejected</option>
                          <% } %>
                        </select>
                        <button
                          type="submit"
                          class="px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg shadow-md transition duration-200 transform hover:scale-105"
                        >
                          Update
                        </button>
                      </form>
                    </div>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>
            <% }) %>
          </div>
        </div>
      </div>
    </div>

    <%- include('../footer.ejs') %>
    <script>
      document.querySelectorAll(".studentConfirmation").forEach((form) => {
        form.addEventListener("submit", async function (event) {
          event.preventDefault();

          const problemId = this.querySelector('input[name="problemId"]').value;
          const isResolved =
            this.querySelector('input[name="isResolved"]').value === "true";

          try {
            const response = await fetch(
              "/services/problems/student-confirmation",
              {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ problemId, isResolved }),
              }
            );

            const data = await response.json();

            if (data.success) {
              let message = isResolved
                ? "Problem resolution has been confirmed successfully!"
                : "Problem has been marked as not resolved and returned to pending.";

              Swal.fire({
                icon: "success",
                title: isResolved ? "Confirmed" : "Returned to Pending",
                text: message,
              }).then(() => {
                location.reload();
              });
            } else {
              Swal.fire({
                icon: "error",
                title: "Error",
                text: data.message || "Failed to process your response",
              });
            }
          } catch (error) {
            console.error("Error:", error);
            Swal.fire({
              icon: "error",
              title: "Error",
              text: "Something went wrong. Please try again.",
            });
          }
        });
      });
    </script>
    <script>
      document
        .getElementById("problemForm")
        .addEventListener("submit", async function (event) {
          event.preventDefault();

          const formData = new FormData();
          formData.append(
            "problemTitle",
            document.getElementById("problemTitle").value.trim()
          );
          formData.append(
            "problemDescription",
            document.getElementById("problemDescription").value.trim()
          );
          formData.append(
            "problemImage",
            document.getElementById("problemImage").files[0]
          ); // Image file
          formData.append(
            "roomNo",
            document.getElementById("roomNo").value.trim()
          );
          formData.append(
            "category",
            document.getElementById("category").value
          );
          formData.append(
            "studentId",
            Number(document.getElementById("roll_number").value.trim())
          );
          formData.append("hostel", document.getElementById("hostel").value);

          try {
            const response = await fetch("/services/problems/add", {
              method: "POST",
              body: formData, // No need to set Content-Type, fetch handles it automatically
            });

            const data = await response.json();
            console.log("Response from server:", data);

            if (response.ok) {
              alert("Problem added successfully!");
              this.reset();
              location.reload();
            } else {
              console.error("Error adding problem:", data);
              alert("Error adding problem.");
            }
          } catch (error) {
            console.error("Error in problem form submission:", error);
            alert("An error occurred while adding the problem.");
          }
        });
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchInput");
        const categoryFilter = document.getElementById("categoryFilter");
        const statusFilter = document.getElementById("statusFilter");
        const problemCards = document.querySelectorAll(".problem-card");

        function filterProblems() {
          const searchTerm = searchInput.value.toLowerCase();
          const selectedCategory = categoryFilter.value;
          const selectedStatus = statusFilter.value;

          problemCards.forEach((card) => {
            const title = card.querySelector("h3").textContent.toLowerCase();
            const category = card
              .querySelector(".bg-blue-100")
              .textContent.trim();

            // Get the status element - it might not exist if ToBeConfirmed
            const statusElement = card.querySelector(
              ".absolute.top-4.right-4 span"
            );
            let status = "";

            // If status badge exists, use its text
            if (statusElement) {
              status = statusElement.textContent.trim();
            } else {
              // If no status badge found, check if there's a specific class or data attribute
              // that can identify ToBeConfirmed
              if (card.getAttribute("data-status") === "ToBeConfirmed") {
                status = "To Be Confirmed";
              }
            }

            const matchesSearch = title.includes(searchTerm);
            const matchesCategory =
              !selectedCategory || category === selectedCategory;
            const matchesStatus =
              !selectedStatus ||
              (selectedStatus === "ToBeConfirmed" &&
                status === "To Be Confirmed") ||
              (selectedStatus !== "ToBeConfirmed" && status === selectedStatus);

            if (matchesSearch && matchesCategory && matchesStatus) {
              card.style.display = "block";
            } else {
              card.style.display = "none";
            }
          });
        }

        searchInput.addEventListener("input", filterProblems);
        categoryFilter.addEventListener("change", filterProblems);
        statusFilter.addEventListener("change", filterProblems);
      });
    </script>
  </body>
</html>
